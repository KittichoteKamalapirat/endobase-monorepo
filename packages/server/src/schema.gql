# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Officer {
  id: ID!
  officerNum: String!
  actions: [Action!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Action {
  id: ID!
  passed: Boolean!
  sessionId: String!
  session: Session!
  officerId: String!
  officer: Officer!
  type: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Patient {
  id: ID!
  hosNum: String!
  sessions: [Session!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Session {
  id: ID!
  status: String!
  endoId: String!
  endo: Endo!
  patientId: String
  patient: Patient
  actions: [Action!]
  isoEndTime: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Endo {
  id: ID!
  brand: String!
  type: String!
  model: String!
  trayId: String!
  tray: Tray
  sessions: [Session!]!
  status: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  position: String!
  currentSessionId: String
}

type Tray {
  id: ID!
  row: Float!
  endo: Endo
  containerId: String!
  container: Container!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Container {
  id: ID!
  col: String!
  trays: [Tray!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Query {
  endos: [Endo!]!
  endo(id: String!): Endo!
  sessions: [Session!]!
  session(id: String!): Session!
  patients: [Patient!]!
  patient(id: String!): Patient!
  containers: [Container!]!
  container(id: Int!): Container!
  trays: [Tray!]!
  tray(id: Int!): Tray!
  actions: [Action!]!
  action(id: Int!): Action!
  officers: [Officer!]!
  officer(id: Int!): Officer!
}

type Mutation {
  createEndo(input: CreateEndoInput!): Endo!
  pickEndo(id: String!): Endo!
  createSession(input: CreateSessionInput!): Session!
  updateSession(updateSessionInput: UpdateSessionInput!): Session!
  updateSessionPatient(input: UpdateSessionPatientInput!): Session!
  removeSession(id: String!): Session!
  createPatient(createPatientInput: CreatePatientInput!): Patient!
  updatePatient(updatePatientInput: UpdatePatientInput!): Patient!
  removePatient(id: Int!): Patient!
  createContainer(createContainerInput: CreateContainerInput!): Container!
  updateContainer(updateContainerInput: UpdateContainerInput!): Container!
  removeContainer(id: Int!): Container!
  createTray(input: CreateTrayInput!): Tray!
  updateTray(updateTrayInput: UpdateTrayInput!): Tray!
  removeTray(id: Int!): Tray!
  createAction(input: CreateActionInput!): Action!
  updateAction(updateActionInput: UpdateActionInput!): Action!
  removeAction(id: Int!): Action!
  createOfficer(createOfficerInput: CreateOfficerInput!): Officer!
  updateOfficer(updateOfficerInput: UpdateOfficerInput!): Officer!
  removeOfficer(id: Int!): Officer!
}

input CreateEndoInput {
  trayId: String!
  brand: String!
  type: String!
  model: String!
}

input CreateSessionInput {
  """For create a session for an endoscope"""
  endoId: String!
}

input UpdateSessionInput {
  """For create a session for an endoscope"""
  endoId: String
  id: String
  status: String
  patientHN: String
  endTime: String
}

input UpdateSessionPatientInput {
  id: String
  patientHN: String!
}

input CreatePatientInput {
  """Example field (placeholder)"""
  hosNum: String!
}

input UpdatePatientInput {
  """Example field (placeholder)"""
  hosNum: String
  id: Int!
}

input CreateContainerInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateContainerInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateTrayInput {
  containerId: String!

  """row inside a container"""
  row: Int!
}

input UpdateTrayInput {
  containerId: String

  """row inside a container"""
  row: Int
  id: Int!
}

input CreateActionInput {
  sessionId: String!
  type: String!
  passed: Boolean!
  officerNum: String!
}

input UpdateActionInput {
  sessionId: String
  type: String
  passed: Boolean
  officerNum: String
  id: Int!
}

input CreateOfficerInput {
  officerNum: String!
}

input UpdateOfficerInput {
  officerNum: String
  id: Int!
}